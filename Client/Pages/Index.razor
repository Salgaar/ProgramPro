@page "/"
@attribute [Authorize]
@inject HttpClient Http
@inject AuthenticationStateProvider AuthenticationStateProvider

    @code {
    bool allowVirtualization = false;
    private string id = null;
    private List<Trainingprogram> programs = new List<Trainingprogram>()
    {
        new Trainingprogram
        {
             Name = "Test",
             Description = "Test",
             Id = 1
        }
    };

    protected override async Task OnInitializedAsync()
    {
        try
        {
            await base.OnInitializedAsync();
            var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
            var user = authState.User;
            id = $"User Id: {user.FindFirst(c => c.Type == "sub")?.Value}";
            //programs = await Http.GetFromJsonAsync<List<Trainingprogram>>("api/Trainingprograms");
        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }
    }
}


