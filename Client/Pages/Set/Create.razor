@inject DialogService DialogService

<div style="z-index:200">
    <RadzenCard>
        <RadzenRow>
            <RadzenColumn>
                <RadzenNumeric @bind-Value="@set.Weight" />
            </RadzenColumn>
        </RadzenRow>
        <RadzenRow>
            <RadzenColumn>
                <RadzenNumeric @bind-Value="@set.Reps" />
            </RadzenColumn>
        </RadzenRow>
        <RadzenRow>
            <RadzenColumn>
                <RadzenNumeric @bind-Value="@set.RPE" />
            </RadzenColumn>
        </RadzenRow>
        <RadzenRow>
            <RadzenColumn>
                <RadzenNumeric @bind-Value="@set.RIR" />
            </RadzenColumn>
        </RadzenRow>
        <RadzenRow>
            <RadzenColumn>
                <RadzenNumeric @bind-Value="@set.PercentageOfOneRepMax" />
            </RadzenColumn>
        </RadzenRow>
        <RadzenRow>
            <RadzenColumn>
                <RadzenSelectBar @bind-Value=@values Data="@data" TValue="IEnumerable<int>" Multiple="true" Change=@OnChange>
                    <Items>
                        <RadzenSelectBarItem Text="Static item" Value="0" />
                    </Items>
                </RadzenSelectBar>
            </RadzenColumn>
        </RadzenRow>
        <RadzenRow>
            <RadzenButton Click=@Save>Create</RadzenButton>
        </RadzenRow>
    </RadzenCard>
</div>



@code {
    private Set set = new Set();
    IEnumerable<int> values = new int[] { 1, 2 };
    IEnumerable<SetType> data = (SetType[])Enum.GetValues(typeof(SetType));

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
    }

    void OnChange(object value)
    {
        var str = value is IEnumerable<int> ? string.Join(", ", (IEnumerable<int>)value) : value;
        Console.WriteLine($"Value changed to {str}");
    }

    private void Save()
    {
        DialogService.Close(set);
    }
}
