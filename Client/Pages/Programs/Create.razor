@page "/Programs/Create/{Id:int}"
@inject HttpClient Http
@inject DialogService DialogService

@if(program == null)
{
    <RadzenProgressBarCircular ProgressBarStyle="ProgressBarStyle.Primary" Value="100" ShowValue="false" Mode="ProgressBarMode.Indeterminate" />
}
else
{
    <RadzenRow>
        <RadzenColumn>
            <RadzenRow>
                <RadzenColumn>
                    <RadzenCard>
                        <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Name</RadzenText>
                        <RadzenTextBox Value="@program.Name" class="w-100" />
                    </RadzenCard>
                </RadzenColumn>
            </RadzenRow>
            <RadzenRow>
                <RadzenColumn>
                    <RadzenCard>
                        <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Description</RadzenText>
                        <RadzenTextArea class="w-100" />
                    </RadzenCard>
                </RadzenColumn>
            </RadzenRow>
        </RadzenColumn>
    </RadzenRow>
}


@code {
    [Parameter] public int Id { get; set; }
    TrainingProgram program = null;


    protected override async Task OnInitializedAsync()
    {
        try
        {
            program = await Http.GetFromJsonAsync<TrainingProgram>($"api/Trainingprograms/{Id}");
            StateHasChanged();
        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }
    }
}
